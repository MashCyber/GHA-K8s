apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.service.healthcheck.readiness.interval: 10s
    kompose.service.healthcheck.readiness.retries: "3"
    kompose.service.healthcheck.readiness.start_period: 30s
    kompose.service.healthcheck.readiness.test: CMD curl -f "http://localhost:8080"
    kompose.service.healthcheck.readiness.timeout: 10s
    kompose.service.type: nodeport
    kompose.version: 1.26.0 (40646f47)
    kompose.volume.size: 500Mi
  creationTimestamp: null
  labels:
    io.kompose.service: proxy
  name: proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: proxy
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose.yml convert
        kompose.service.healthcheck.readiness.interval: 10s
        kompose.service.healthcheck.readiness.retries: "3"
        kompose.service.healthcheck.readiness.start_period: 30s
        kompose.service.healthcheck.readiness.test: CMD curl -f "http://localhost:8080"
        kompose.service.healthcheck.readiness.timeout: 10s
        kompose.service.type: nodeport
        kompose.version: 1.26.0 (40646f47)
        kompose.volume.size: 500Mi
      creationTimestamp: null
      labels:
        io.kompose.network/proxy-net: "true"
        io.kompose.service: proxy
    spec:
      containers:
        - image: nginx:alpine
          name: proxy
          ports:
            - containerPort: 80
          readinessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:8080
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/nginx
              name: data
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
            readOnly: true
status: {}
